{"version":3,"sources":["vendor/ember-cli/app-prefix.js","dummy/acceptance-tests/sinon.js","dummy/app.js","dummy/components/app-version.js","dummy/components/sl-translate.js","dummy/controllers/array.js","dummy/controllers/demo.js","dummy/controllers/object.js","dummy/initializers/app-version.js","dummy/initializers/export-application-global.js","dummy/mixins/sl-get-translation.js","dummy/router.js","dummy/routes/demo.js","dummy/services/sl-translate.js","dummy/sl-ember-translate/tests/modules/sl-ember-translate/components/sl-translate.jshint.js","dummy/sl-ember-translate/tests/modules/sl-ember-translate/mixins/sl-get-translation.jshint.js","dummy/sl-ember-translate/tests/modules/sl-ember-translate/services/sl-translate.jshint.js","dummy/templates/application.js","dummy/templates/demo.js","dummy/templates/index.js","dummy/tests/app.jshint.js","dummy/tests/blanket-options.js","dummy/tests/blanket-options.jshint.js","dummy/tests/controllers/demo.jshint.js","dummy/tests/helpers/resolver.js","dummy/tests/helpers/resolver.jshint.js","dummy/tests/helpers/start-app.js","dummy/tests/helpers/start-app.jshint.js","dummy/tests/integration/components/sl-translate-test.js","dummy/tests/integration/components/sl-translate-test.jshint.js","dummy/tests/router.jshint.js","dummy/tests/routes/demo.jshint.js","dummy/tests/test-helper.js","dummy/tests/test-helper.jshint.js","dummy/tests/unit/components/sl-translate-test.js","dummy/tests/unit/components/sl-translate-test.jshint.js","dummy/tests/unit/mixins/sl-get-translation-test.js","dummy/tests/unit/mixins/sl-get-translation-test.jshint.js","dummy/tests/unit/services/sl-translate-test.js","dummy/tests/unit/services/sl-translate-test.jshint.js","vendor/ember-cli/app-suffix.js","vendor/ember-cli/app-boot.js"],"sourcesContent":["\"use strict\";\n/* jshint ignore:start */\n\n/* jshint ignore:end */\n","define('dummy/acceptance-tests/sinon', ['exports', 'ember-sinon/acceptance-tests/sinon'], function (exports, sinon) {\n\n\t'use strict';\n\n\n\n\texports['default'] = sinon['default'];\n\n});","define('dummy/app', ['exports', 'ember', 'ember/resolver', 'ember/load-initializers', 'dummy/config/environment'], function (exports, Ember, Resolver, loadInitializers, config) {\n\n    'use strict';\n\n    Ember['default'].MODEL_FACTORY_INJECTIONS = true;\n\n    var App = Ember['default'].Application.extend({\n        modulePrefix: config['default'].modulePrefix,\n        podModulePrefix: config['default'].podModulePrefix,\n        Resolver: Resolver['default']\n    });\n\n    loadInitializers['default'](App, config['default'].modulePrefix);\n\n    exports['default'] = App;\n\n});","define('dummy/components/app-version', ['exports', 'ember-cli-app-version/components/app-version', 'dummy/config/environment'], function (exports, AppVersionComponent, config) {\n\n  'use strict';\n\n  var _config$APP = config['default'].APP;\n  var name = _config$APP.name;\n  var version = _config$APP.version;\n\n  exports['default'] = AppVersionComponent['default'].extend({\n    version: version,\n    name: name\n  });\n\n});","define('dummy/components/sl-translate', ['exports', 'sl-ember-translate/components/sl-translate'], function (exports, component) {\n\n\t'use strict';\n\n\texports['default'] = component['default'];\n\n});","define('dummy/controllers/array', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Controller;\n\n});","define('dummy/controllers/demo', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Controller.extend({\n        actions: {\n            updateStringValues: function updateStringValues() {\n                this.set('valueToDisplay', 'New Updated Value - ' + Math.random());\n            }\n        },\n\n        valueToDisplay: 'Unicorn'\n    });\n\n});","define('dummy/controllers/object', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Controller;\n\n});","define('dummy/initializers/app-version', ['exports', 'ember-cli-app-version/initializer-factory', 'dummy/config/environment'], function (exports, initializerFactory, config) {\n\n  'use strict';\n\n  var _config$APP = config['default'].APP;\n  var name = _config$APP.name;\n  var version = _config$APP.version;\n\n  exports['default'] = {\n    name: 'App Version',\n    initialize: initializerFactory['default'](name, version)\n  };\n\n});","define('dummy/initializers/export-application-global', ['exports', 'ember', 'dummy/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  exports.initialize = initialize;\n\n  function initialize() {\n    var application = arguments[1] || arguments[0];\n    if (config['default'].exportApplicationGlobal !== false) {\n      var value = config['default'].exportApplicationGlobal;\n      var globalName;\n\n      if (typeof value === 'string') {\n        globalName = value;\n      } else {\n        globalName = Ember['default'].String.classify(config['default'].modulePrefix);\n      }\n\n      if (!window[globalName]) {\n        window[globalName] = application;\n\n        application.reopen({\n          willDestroy: function willDestroy() {\n            this._super.apply(this, arguments);\n            delete window[globalName];\n          }\n        });\n      }\n    }\n  }\n\n  exports['default'] = {\n    name: 'export-application-global',\n\n    initialize: initialize\n  };\n\n});","define('dummy/mixins/sl-get-translation', ['exports', 'sl-ember-translate/mixins/sl-get-translation'], function (exports, SlGetTranslation) {\n\n\t'use strict';\n\n\texports['default'] = SlGetTranslation['default'];\n\n});","define('dummy/router', ['exports', 'ember', 'dummy/config/environment'], function (exports, Ember, config) {\n\n    'use strict';\n\n    var Router = Ember['default'].Router.extend({\n        location: config['default'].locationType\n    });\n\n    Router.map(function () {\n        this.route('index', { path: '/' });\n        this.route('demo');\n    });\n\n    exports['default'] = Router;\n\n});","define('dummy/routes/demo', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend({\n        model: function model() {\n            return Ember['default'].Object.create({\n                'SIMPLE_KEY': 'I have been translated',\n                'SINGULAR_KEY': 'View my family',\n                'PLURAL_KEY': 'View my families',\n                'REPLACED_KEY': 'I have replaced {0} and {1}'\n            });\n        },\n\n        setupController: function setupController(controller, model) {\n            this.get('translateService').setDictionary(model);\n        },\n\n        translateService: Ember['default'].inject.service('sl-translate')\n    });\n\n});","define('dummy/services/sl-translate', ['exports', 'sl-ember-translate/services/sl-translate'], function (exports, TranslateService) {\n\n\t'use strict';\n\n\texports['default'] = TranslateService['default'];\n\n});","define('dummy/sl-ember-translate/tests/modules/sl-ember-translate/components/sl-translate.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - modules/sl-ember-translate/components');\n  QUnit.test('modules/sl-ember-translate/components/sl-translate.js should pass jshint', function (assert) {\n    assert.ok(true, 'modules/sl-ember-translate/components/sl-translate.js should pass jshint.');\n  });\n\n});","define('dummy/sl-ember-translate/tests/modules/sl-ember-translate/mixins/sl-get-translation.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - modules/sl-ember-translate/mixins');\n  QUnit.test('modules/sl-ember-translate/mixins/sl-get-translation.js should pass jshint', function (assert) {\n    assert.ok(true, 'modules/sl-ember-translate/mixins/sl-get-translation.js should pass jshint.');\n  });\n\n});","define('dummy/sl-ember-translate/tests/modules/sl-ember-translate/services/sl-translate.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - modules/sl-ember-translate/services');\n  QUnit.test('modules/sl-ember-translate/services/sl-translate.js should pass jshint', function (assert) {\n    assert.ok(true, 'modules/sl-ember-translate/services/sl-translate.js should pass jshint.');\n  });\n\n});","define('dummy/templates/application', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 12,\n              \"column\": 20\n            },\n            \"end\": {\n              \"line\": 12,\n              \"column\": 71\n            }\n          },\n          \"moduleName\": \"dummy/templates/application.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createElement(\"i\");\n          dom.setAttribute(el1,\"class\",\"fa fa-home\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" Home\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child1 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 13,\n              \"column\": 20\n            },\n            \"end\": {\n              \"line\": 13,\n              \"column\": 71\n            }\n          },\n          \"moduleName\": \"dummy/templates/application.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createElement(\"i\");\n          dom.setAttribute(el1,\"class\",\"fa fa-cubes\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" Demo\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 33,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"dummy/templates/application.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"container\");\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"row\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"col-md-12\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"btn-group pull-right\");\n        var el5 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"button\");\n        dom.setAttribute(el5,\"type\",\"button\");\n        dom.setAttribute(el5,\"class\",\"btn btn-default dropdown-toggle\");\n        dom.setAttribute(el5,\"data-toggle\",\"dropdown\");\n        dom.setAttribute(el5,\"aria-expanded\",\"false\");\n        var el6 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"i\");\n        dom.setAttribute(el6,\"class\",\"fa fa-reorder\");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\" \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"span\");\n        dom.setAttribute(el6,\"class\",\"caret\");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n\\n                \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"ul\");\n        dom.setAttribute(el5,\"class\",\"dropdown-menu\");\n        dom.setAttribute(el5,\"role\",\"menu\");\n        var el6 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        var el7 = dom.createComment(\"\");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        var el7 = dom.createComment(\"\");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        var el7 = dom.createElement(\"a\");\n        dom.setAttribute(el7,\"href\",\"http://softlayer.github.io/sl-ember-translate/docs/\");\n        dom.setAttribute(el7,\"target\",\"new\");\n        var el8 = dom.createElement(\"i\");\n        dom.setAttribute(el8,\"class\",\"fa fa-book\");\n        dom.appendChild(el7, el8);\n        var el8 = dom.createTextNode(\" Documentation\");\n        dom.appendChild(el7, el8);\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        var el7 = dom.createElement(\"a\");\n        dom.setAttribute(el7,\"href\",\"https://github.com/softlayer/sl-ember-translate/blob/master/CONTRIBUTING.md\");\n        var el8 = dom.createElement(\"i\");\n        dom.setAttribute(el8,\"class\",\"fa fa-cog\");\n        dom.appendChild(el7, el8);\n        var el8 = dom.createTextNode(\" Contribution Guide\");\n        dom.appendChild(el7, el8);\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        var el7 = dom.createElement(\"a\");\n        dom.setAttribute(el7,\"href\",\"https://github.com/softlayer/sl-ember-translate/stargazers\");\n        var el8 = dom.createElement(\"i\");\n        dom.setAttribute(el8,\"class\",\"fa fa-star\");\n        dom.appendChild(el7, el8);\n        var el8 = dom.createTextNode(\" Star Our Repo\");\n        dom.appendChild(el7, el8);\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"li\");\n        var el7 = dom.createElement(\"a\");\n        dom.setAttribute(el7,\"href\",\"https://github.com/softlayer/sl-ember-translate/fork\");\n        var el8 = dom.createElement(\"i\");\n        dom.setAttribute(el8,\"class\",\"fa fa-code-fork\");\n        dom.appendChild(el7, el8);\n        var el8 = dom.createTextNode(\" Fork Our Repo\");\n        dom.appendChild(el7, el8);\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"br\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"br\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"row\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"col-md-12 text-center\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"p\");\n        var el5 = dom.createTextNode(\"ember install sl-ember-translate\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"p\");\n        var el5 = dom.createElement(\"a\");\n        dom.setAttribute(el5,\"href\",\"https://github.com/softlayer/sl-ember-translate/blob/master/LICENSE.md\");\n        var el6 = dom.createTextNode(\"MIT Licensed\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [2]);\n        var element1 = dom.childAt(element0, [1, 1, 1, 3]);\n        var morphs = new Array(3);\n        morphs[0] = dom.createMorphAt(dom.childAt(element1, [1]),0,0);\n        morphs[1] = dom.createMorphAt(dom.childAt(element1, [3]),0,0);\n        morphs[2] = dom.createMorphAt(element0,3,3);\n        return morphs;\n      },\n      statements: [\n        [\"block\",\"link-to\",[\"index\"],[],0,null,[\"loc\",[null,[12,20],[12,83]]]],\n        [\"block\",\"link-to\",[\"demo\"],[],1,null,[\"loc\",[null,[13,20],[13,83]]]],\n        [\"content\",\"outlet\",[\"loc\",[null,[23,4],[23,14]]]]\n      ],\n      locals: [],\n      templates: [child0, child1]\n    };\n  }()));\n\n});","define('dummy/templates/demo', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 30,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"dummy/templates/demo.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-md-12 text-center\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h1\");\n        var el4 = dom.createTextNode(\"Usage Demonstration\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        dom.setAttribute(el3,\"class\",\"lead\");\n        var el4 = dom.createTextNode(\"View the source code of the dummy application for syntax employed in this demo\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h4\");\n        var el2 = dom.createTextNode(\"Simple Key\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h4\");\n        var el2 = dom.createTextNode(\"Singular/Plural Keys\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h4\");\n        var el2 = dom.createTextNode(\"Replaced Values In Keys\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\nOriginal String: \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\nReplaced String: \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h4\");\n        var el2 = dom.createTextNode(\"Bound Replacement Values In Keys\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\nString Will Update: \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"button\");\n        var el2 = dom.createTextNode(\"Update Values\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h4\");\n        var el2 = dom.createTextNode(\"Used alongside other properties or attribute bindings\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [36]);\n        var morphs = new Array(8);\n        morphs[0] = dom.createMorphAt(fragment,4,4,contextualElement);\n        morphs[1] = dom.createMorphAt(fragment,11,11,contextualElement);\n        morphs[2] = dom.createMorphAt(fragment,14,14,contextualElement);\n        morphs[3] = dom.createMorphAt(fragment,21,21,contextualElement);\n        morphs[4] = dom.createMorphAt(fragment,24,24,contextualElement);\n        morphs[5] = dom.createMorphAt(fragment,31,31,contextualElement);\n        morphs[6] = dom.createElementMorph(element0);\n        morphs[7] = dom.createMorphAt(fragment,43,43,contextualElement);\n        return morphs;\n      },\n      statements: [\n        [\"inline\",\"sl-translate\",[],[\"key\",\"SIMPLE_KEY\"],[\"loc\",[null,[9,0],[9,33]]]],\n        [\"inline\",\"sl-translate\",[],[\"key\",\"SINGULAR_KEY\",\"pluralKey\",\"PLURAL_KEY\",\"pluralCount\",\"1\"],[\"loc\",[null,[13,0],[13,74]]]],\n        [\"inline\",\"sl-translate\",[],[\"key\",\"SINGULAR_KEY\",\"pluralKey\",\"PLURAL_KEY\",\"pluralCount\",\"3\"],[\"loc\",[null,[14,0],[14,74]]]],\n        [\"inline\",\"sl-translate\",[],[\"key\",\"REPLACED_KEY\"],[\"loc\",[null,[18,17],[18,52]]]],\n        [\"inline\",\"sl-translate\",[],[\"key\",\"REPLACED_KEY\",\"$0\",\"First\",\"$1\",\"Unicorn\"],[\"loc\",[null,[19,17],[19,76]]]],\n        [\"inline\",\"sl-translate\",[],[\"key\",\"REPLACED_KEY\",\"$0\",\"First\",\"$1\",[\"subexpr\",\"@mut\",[[\"get\",\"valueToDisplay\",[\"loc\",[null,[23,68],[23,82]]]]],[],[]]],[\"loc\",[null,[23,20],[23,84]]]],\n        [\"element\",\"action\",[\"updateStringValues\"],[],[\"loc\",[null,[25,8],[25,39]]]],\n        [\"inline\",\"sl-translate\",[],[\"tagName\",\"em\",\"key\",\"REPLACED_KEY\",\"$0\",\"First\",\"$1\",\"Dragon\"],[\"loc\",[null,[29,0],[29,71]]]]\n      ],\n      locals: [],\n      templates: []\n    };\n  }()));\n\n});","define('dummy/templates/index', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 10,\n              \"column\": 12\n            },\n            \"end\": {\n              \"line\": 10,\n              \"column\": 64\n            }\n          },\n          \"moduleName\": \"dummy/templates/index.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createElement(\"i\");\n          dom.setAttribute(el1,\"class\",\"fa fa-cubes fa-5x\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child1 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 11,\n              \"column\": 11\n            },\n            \"end\": {\n              \"line\": 11,\n              \"column\": 41\n            }\n          },\n          \"moduleName\": \"dummy/templates/index.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createElement(\"b\");\n          var el2 = dom.createTextNode(\"Demo\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 21,\n            \"column\": 6\n          }\n        },\n        \"moduleName\": \"dummy/templates/index.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-md-12 text-center\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h1\");\n        var el4 = dom.createTextNode(\"sl-ember-translate REPLACE_APPLICATION_VERSION\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        dom.setAttribute(el3,\"class\",\"lead\");\n        var el4 = dom.createTextNode(\"An Ember CLI Addon that provides the ability to lookup a dictionary value through method calls or via a component in your templates.\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-md-4 text-center\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h3\");\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-md-4 text-center\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h3\");\n        var el4 = dom.createElement(\"a\");\n        dom.setAttribute(el4,\"href\",\"http://softlayer.github.io/sl-ember-translate/docs/\");\n        dom.setAttribute(el4,\"target\",\"new\");\n        var el5 = dom.createElement(\"i\");\n        dom.setAttribute(el5,\"class\",\"fa fa-book fa-5x\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createElement(\"a\");\n        dom.setAttribute(el4,\"href\",\"http://softlayer.github.io/sl-ember-translate/docs/\");\n        dom.setAttribute(el4,\"target\",\"new\");\n        var el5 = dom.createElement(\"b\");\n        var el6 = dom.createTextNode(\"Documentation\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-md-4 text-center\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h3\");\n        var el4 = dom.createElement(\"a\");\n        dom.setAttribute(el4,\"href\",\"https://github.com/softlayer/sl-ember-translate\");\n        var el5 = dom.createElement(\"i\");\n        dom.setAttribute(el5,\"class\",\"fa fa-github fa-5x\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createElement(\"a\");\n        dom.setAttribute(el4,\"href\",\"https://github.com/softlayer/sl-ember-translate\");\n        var el5 = dom.createElement(\"b\");\n        var el6 = dom.createTextNode(\"Available on GitHub\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [2, 1]);\n        var morphs = new Array(2);\n        morphs[0] = dom.createMorphAt(dom.childAt(element0, [1]),0,0);\n        morphs[1] = dom.createMorphAt(dom.childAt(element0, [3]),0,0);\n        return morphs;\n      },\n      statements: [\n        [\"block\",\"link-to\",[\"demo\"],[],0,null,[\"loc\",[null,[10,12],[10,76]]]],\n        [\"block\",\"link-to\",[\"demo\"],[],1,null,[\"loc\",[null,[11,11],[11,53]]]]\n      ],\n      locals: [],\n      templates: [child0, child1]\n    };\n  }()));\n\n});","define('dummy/tests/app.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - .');\n  QUnit.test('app.js should pass jshint', function(assert) { \n    assert.ok(true, 'app.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/blanket-options', function () {\n\n    'use strict';\n\n    /* globals blanket, module */\n\n    var options = {\n        modulePrefix: 'sl-ember-translate',\n        filter: '//.*sl-ember-translate/.*/',\n        antifilter: '//.*(tests|template).*/',\n        loaderExclusions: [],\n        enableCoverage: true,\n        modulePattern: '\\/(\\\\w+)',\n        branchTracking: true,\n        cliOptions: {\n            reporters: ['json'],\n            autostart: true\n        }\n    };\n\n    if ('undefined' === typeof exports) {\n        blanket.options(options);\n    } else {\n        module.exports = options;\n    }\n\n});","define('dummy/tests/blanket-options.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - .');\n  QUnit.test('blanket-options.js should pass jshint', function(assert) { \n    assert.ok(true, 'blanket-options.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/controllers/demo.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - controllers');\n  QUnit.test('controllers/demo.js should pass jshint', function(assert) { \n    assert.ok(true, 'controllers/demo.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/helpers/resolver', ['exports', 'ember/resolver', 'dummy/config/environment'], function (exports, Resolver, config) {\n\n    'use strict';\n\n    var resolver = Resolver['default'].create();\n\n    resolver.namespace = {\n        modulePrefix: config['default'].modulePrefix,\n        podModulePrefix: config['default'].podModulePrefix\n    };\n\n    exports['default'] = resolver;\n\n});","define('dummy/tests/helpers/resolver.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - helpers');\n  QUnit.test('helpers/resolver.js should pass jshint', function(assert) { \n    assert.ok(true, 'helpers/resolver.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/helpers/start-app', ['exports', 'ember', 'dummy/app', 'dummy/config/environment'], function (exports, Ember, Application, config) {\n\n    'use strict';\n\n\n\n    exports['default'] = startApp;\n    function startApp(attrs) {\n        var application = undefined;\n\n        var attributes = Ember['default'].merge({}, config['default'].APP);\n        attributes = Ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n        Ember['default'].run(function () {\n            application = Application['default'].create(attributes);\n            application.setupForTesting();\n            application.injectTestHelpers();\n        });\n\n        return application;\n    }\n\n});","define('dummy/tests/helpers/start-app.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - helpers');\n  QUnit.test('helpers/start-app.js should pass jshint', function(assert) { \n    assert.ok(true, 'helpers/start-app.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/integration/components/sl-translate-test', ['ember', 'ember-qunit'], function (Ember, ember_qunit) {\n\n    'use strict';\n\n    ember_qunit.moduleForComponent('sl-translate', 'Integration | Component | sl translate', {\n        beforeEach: function beforeEach() {\n            this.container.lookup('service:sl-translate').setDictionary(Ember['default'].Object.create({\n                'SIMPLE_KEY': 'I have been translated',\n                'SINGULAR_KEY': 'View my family',\n                'PLURAL_KEY': 'View my families',\n                'REPLACED_KEY': 'I have replaced {0} and {1}'\n            }));\n        },\n\n        integration: true\n    });\n\n    ember_qunit.test('Simple Key Translation', function (assert) {\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-translate', [], ['key', 'SIMPLE_KEY'], ['loc', [null, [2, 8], [2, 42]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').text().trim(), 'I have been translated', 'Simple Key was translated');\n    });\n\n    ember_qunit.test('Single/Plural Keys', function (assert) {\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-translate', [], ['key', 'SINGULAR_KEY', 'pluralKey', 'PLURAL_KEY', 'pluralCount', '1'], ['loc', [null, [2, 8], [2, 82]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').text().trim(), 'View my family', 'Singular Key was correctly returned');\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-translate', [], ['key', 'SINGULAR_KEY', 'pluralKey', 'PLURAL_KEY', 'pluralCount', '3'], ['loc', [null, [2, 8], [2, 82]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').text().trim(), 'View my families', 'Plural Key was correctly returned');\n    });\n\n    ember_qunit.test('Replaced Values In Keys', function (assert) {\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-translate', [], ['key', 'REPLACED_KEY'], ['loc', [null, [2, 8], [2, 43]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').text().trim(), 'I have replaced {0} and {1}', 'Original String was correct');\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-translate', [], ['key', 'REPLACED_KEY', '$0', 'First', '$1', 'Unicorn'], ['loc', [null, [2, 8], [2, 67]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').text().trim(), 'I have replaced First and Unicorn', 'Replaced String was correct');\n    });\n\n    ember_qunit.test('Bound Replacement Values In Keys', function (assert) {\n        this.set('valueToDisplay', 'the Bound Value');\n\n        this.render(Ember['default'].HTMLBars.template((function () {\n            return {\n                meta: {\n                    'revision': 'Ember@1.13.7',\n                    'loc': {\n                        'source': null,\n                        'start': {\n                            'line': 1,\n                            'column': 0\n                        },\n                        'end': {\n                            'line': 3,\n                            'column': 4\n                        }\n                    }\n                },\n                arity: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                buildFragment: function buildFragment(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode('\\n        ');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment('');\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode('\\n    ');\n                    dom.appendChild(el0, el1);\n                    return el0;\n                },\n                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                    var morphs = new Array(1);\n                    morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n                    return morphs;\n                },\n                statements: [['inline', 'sl-translate', [], ['key', 'REPLACED_KEY', '$0', 'First', '$1', ['subexpr', '@mut', [['get', 'valueToDisplay', ['loc', [null, [2, 56], [2, 70]]]]], [], []]], ['loc', [null, [2, 8], [2, 72]]]]],\n                locals: [],\n                templates: []\n            };\n        })()));\n\n        assert.strictEqual(this.$('>:first-child').text().trim(), 'I have replaced First and the Bound Value', 'Using a bound replacement value works');\n    });\n\n});","define('dummy/tests/integration/components/sl-translate-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - integration/components');\n  QUnit.test('integration/components/sl-translate-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'integration/components/sl-translate-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/router.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - .');\n  QUnit.test('router.js should pass jshint', function(assert) { \n    assert.ok(true, 'router.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/routes/demo.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - routes');\n  QUnit.test('routes/demo.js should pass jshint', function(assert) { \n    assert.ok(true, 'routes/demo.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/test-helper', ['dummy/tests/helpers/resolver', 'ember-qunit'], function (resolver, ember_qunit) {\n\n\t'use strict';\n\n\tember_qunit.setResolver(resolver['default']);\n\n});","define('dummy/tests/test-helper.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - .');\n  QUnit.test('test-helper.js should pass jshint', function(assert) { \n    assert.ok(true, 'test-helper.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/unit/components/sl-translate-test', ['ember', 'ember-qunit', 'sinon'], function (Ember, ember_qunit, sinon) {\n\n    'use strict';\n\n    var translateService = Ember['default'].Object.create({\n        translateKey: function translateKey(data) {\n            this.set('key', data.key);\n            this.set('pluralKey', data.pluralKey);\n            this.set('pluralCount', data.pluralCount);\n            this.set('parameters', data.parameters);\n\n            return 'TRANSLATE: ' + data.key;\n        }\n    });\n\n    ember_qunit.moduleForComponent('sl-translate', 'Unit | Component | sl translate', {\n        unit: true\n    });\n\n    ember_qunit.test('Default property values', function (assert) {\n        var component = this.subject();\n\n        assert.strictEqual(component.translateService.name, 'sl-translate', 'The correct service is being injected into the component');\n\n        assert.strictEqual(component.get('tagName'), 'span', '\"tagName\" defaults to span');\n\n        assert.strictEqual(component.get('internalTranslatedString'), null, '\"internalTranslatedString\" defaults to null');\n    });\n\n    ember_qunit.test('setTranslatedString() is called when the willRender() event occurs', function (assert) {\n        var component = this.subject({\n            translateService: translateService,\n            key: 'the_key',\n            pluralKey: 'plural_key',\n            pluralCount: 'plural_count',\n            $0: 'a',\n            $1: 'b'\n        });\n\n        var spy = sinon['default'].spy(component, 'setTranslatedString');\n\n        component.trigger('willRender');\n\n        assert.strictEqual(spy.calledOnce, true, 'setTranslatedString() is called successfully');\n    });\n\n    ember_qunit.test('setTranslatedString() sets internalTranslatedString property with value from translateString()', function (assert) {\n        var component = this.subject({\n            translateService: translateService,\n            key: 'the_key',\n            pluralKey: 'plural_key',\n            pluralCount: 'plural_count',\n            $0: 'a',\n            $1: 'b'\n        });\n\n        var spy = sinon['default'].spy(component, 'translateString');\n\n        Ember['default'].run(function () {\n            component.setTranslatedString();\n        });\n\n        assert.strictEqual(component.get('internalTranslatedString'), 'TRANSLATE: the_key', 'the property \"internalTranslatedString\" has the correct value');\n\n        assert.strictEqual(spy.calledOnce, true, 'translateString() is called successfully once');\n    });\n\n    ember_qunit.test('translateString() returns expected value', function (assert) {\n        var component = this.subject({\n            translateService: translateService,\n            key: 'the_key',\n            pluralKey: 'plural_key',\n            pluralCount: 'plural_count',\n            $0: 'a',\n            $1: 'b'\n        });\n\n        assert.equal(component.translateString(), 'TRANSLATE: the_key', 'setTranslatedString() returns expected value successfully');\n    });\n\n    ember_qunit.test('setTranslatedString() sets internalTranslatedString and translatedString sets correct value', function (assert) {\n        var component = this.subject({\n            translateService: translateService,\n            key: 'the_key',\n            pluralKey: 'plural_key',\n            pluralCount: 'plural_count',\n            $0: 'a',\n            $1: 'b'\n        });\n\n        Ember['default'].run(function () {\n            component.setTranslatedString();\n        });\n\n        assert.strictEqual(component.get('translatedString'), 'TRANSLATE: the_key', 'translatedString computed property sets correct string');\n    });\n\n    ember_qunit.test('translatedString() returns correct value', function (assert) {\n        var component = this.subject({\n            translateService: translateService,\n            key: 'the_key',\n            pluralKey: 'plural_key',\n            pluralCount: 'plural_count',\n            $0: 'a',\n            $1: 'b'\n        });\n\n        component.trigger('willRender');\n\n        assert.strictEqual(component.get('translatedString'), component.get('internalTranslatedString'), 'translatedString() returns the correct value');\n    });\n\n    ember_qunit.test('translateString() calls translateKey() on the translation service with given values', function (assert) {\n        this.subject({\n            translateService: translateService,\n            key: 'the_key',\n            pluralKey: 'plural_key',\n            pluralCount: 'plural_count',\n            $0: 'a',\n            $1: 'b',\n            c: 'c'\n        });\n\n        assert.strictEqual(translateService.get('key'), 'the_key');\n        assert.strictEqual(translateService.get('pluralKey'), 'plural_key');\n        assert.strictEqual(translateService.get('pluralCount'), 'plural_count');\n        assert.deepEqual(translateService.get('parameters'), { $0: 'a', $1: 'b' });\n    });\n\n    ember_qunit.test('translateString() only accepts the correct parameter key pattern', function (assert) {\n        var component = this.subject({\n            translateService: translateService,\n            key: 'the_key',\n            pluralKey: 'plural_key',\n            pluralCount: 'plural_count',\n            $0: 'a',\n            $12: 'b',\n            r: 'c',\n            $10000: 'd'\n        });\n\n        Ember['default'].run(function () {\n            component.translateString();\n        });\n\n        assert.deepEqual(translateService.get('parameters'), { $0: 'a', $12: 'b', $10000: 'd' });\n    });\n\n    ember_qunit.test('Dependent keys are correct', function (assert) {\n        var component = this.subject();\n\n        var translatedStringDependentKeys = ['internalTranslatedString'];\n\n        assert.deepEqual(component.translatedString._dependentKeys, translatedStringDependentKeys, 'Dependent keys are set correctly for translatedString()');\n    });\n\n});","define('dummy/tests/unit/components/sl-translate-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/components');\n  QUnit.test('unit/components/sl-translate-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'unit/components/sl-translate-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/unit/mixins/sl-get-translation-test', ['ember', 'sl-ember-translate/mixins/sl-get-translation', 'ember-qunit'], function (Ember, mixinUnderTest, ember_qunit) {\n\n    'use strict';\n\n    ember_qunit.moduleFor('mixin:sl-get-translation', 'Unit | Mixin | sl get translation', {\n        unit: true\n    });\n\n    ember_qunit.test('The correct service is being injected into the mixin', function (assert) {\n        var testObject = Ember['default'].Object.extend(mixinUnderTest['default']);\n        var subject = testObject.create();\n\n        assert.strictEqual(subject.translateService.name, 'sl-translate', 'The correct service is being injected into the mixin');\n    });\n\n    ember_qunit.test('Successfully mixed', function (assert) {\n        var testObject = Ember['default'].Object.extend(mixinUnderTest['default']);\n        var subject = testObject.create();\n\n        assert.ok(subject);\n    });\n\n    ember_qunit.test('Call to get() with a key not beginning with \"translate.\" is not intercepted', function (assert) {\n        var testObject = Ember['default'].Object.extend(mixinUnderTest['default'], {\n            testKey: 'testValue'\n        });\n        var subject = testObject.create();\n\n        assert.strictEqual(subject.get('testKey'), 'testValue');\n    });\n\n    ember_qunit.test('Call to get() with a key beginning with \"translate.\" calls this.translate()', function (assert) {\n        var testObject = Ember['default'].Object.extend(mixinUnderTest['default'], {\n            translate: function translate(value) {\n                return value;\n            }\n        });\n        var subject = testObject.create();\n\n        assert.strictEqual(subject.get('translate.testingKey'), 'testingKey');\n    });\n\n    ember_qunit.test('translate() returns call to this.translateService.getKeyValue()', function (assert) {\n        var testObject = Ember['default'].Object.extend(mixinUnderTest['default'], {\n            translateService: {\n                getKeyValue: function getKeyValue(value) {\n                    return value;\n                }\n            }\n        });\n        var subject = testObject.create();\n\n        assert.strictEqual(subject.translate('called'), 'called');\n    });\n\n});","define('dummy/tests/unit/mixins/sl-get-translation-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/mixins');\n  QUnit.test('unit/mixins/sl-get-translation-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'unit/mixins/sl-get-translation-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/unit/services/sl-translate-test', ['ember', 'ember-qunit', 'sl-ember-translate/services/sl-translate', 'sinon'], function (Ember, ember_qunit, TranslateService, sinon) {\n\n    'use strict';\n\n    var TS = undefined;\n\n    ember_qunit.moduleFor('service:sl-translate', 'Unit | Service | sl translate', {\n        beforeEach: function beforeEach() {\n            TS = TranslateService['default'].create();\n        },\n\n        unit: true\n    });\n\n    ember_qunit.test('dictionary property defaults to null', function (assert) {\n        assert.strictEqual(TS.get('dictionary'), null);\n    });\n\n    ember_qunit.test('setDictionary() accepts only an object as a parameter', function (assert) {\n        var testProperty = Ember['default'].Object.create({\n            parameter: ''\n        });\n\n        var callSetDictionary = function callSetDictionary() {\n            return TS.setDictionary(testProperty.parameter);\n        };\n\n        // Undefined\n        testProperty.set('parameter', undefined);\n\n        assert.throws(callSetDictionary, 'Parameter was undefined');\n\n        // Array\n        testProperty.set('parameter', []);\n\n        assert.throws(callSetDictionary, 'Parameter was an array');\n\n        // Null\n        testProperty.set('parameter', null);\n\n        assert.throws(callSetDictionary, 'Parameter was null');\n\n        // Number\n        testProperty.set('parameter', 123);\n\n        assert.throws(callSetDictionary, 'Parameter was a number');\n\n        // Function\n        testProperty.set('parameter', function () {});\n\n        assert.throws(callSetDictionary, 'Parameter was a function');\n\n        // String\n        testProperty.set('parameter', 'testString');\n\n        assert.throws(callSetDictionary, 'Parameter was a string');\n\n        // Boolean\n        testProperty.set('parameter', false);\n\n        assert.throws(callSetDictionary, 'Parameter was false');\n\n        // Object\n        testProperty.set('parameter', {});\n\n        assert.strictEqual(callSetDictionary(), undefined, 'Parameter was an object');\n\n        // Ember.Object instance\n        testProperty.set('parameter', Ember['default'].Object.create({}));\n\n        assert.strictEqual(callSetDictionary(), undefined, 'Parameter was an Ember.Object instance');\n    });\n\n    ember_qunit.test('setDictionary() sets data on the dictionary property', function (assert) {\n        var testDictionary = Ember['default'].Object.create({\n            'the_key': 'my value'\n        });\n\n        TS.setDictionary(testDictionary);\n\n        assert.deepEqual(TS.get('dictionary'), testDictionary);\n    });\n\n    ember_qunit.test('getKeyValue() Valid key returns key value while non valid key returns key name.', function (assert) {\n        TS.setDictionary(Ember['default'].Object.create({\n            'the_key': 'my value'\n        }));\n\n        assert.notStrictEqual(TS.getKeyValue('wrong_key'), 'the_key');\n\n        assert.strictEqual(TS.getKeyValue('the_key'), 'my value');\n    });\n\n    ember_qunit.test('getKeyValue() is gets called by translateKey', function (assert) {\n        var spy = sinon['default'].spy(TS, 'getKeyValue');\n\n        TS.translateKey({\n            key: 'singular_key',\n            pluralKey: 'plural_key'\n        });\n\n        assert.strictEqual(spy.calledOnce, true, 'getKeyValue() is called once');\n    });\n\n    ember_qunit.test('setDictionary() accepts only an object as a parameter', function (assert) {\n        var testProperty = Ember['default'].Object.create({\n            parameter: ''\n        });\n\n        var callTranslateKey = function callTranslateKey() {\n            return TS.translateKey(testProperty.parameter);\n        };\n\n        // Undefined\n        testProperty.set('parameter', undefined);\n\n        assert.throws(callTranslateKey, 'Parameter was undefined');\n\n        // Array\n        testProperty.set('parameter', []);\n\n        assert.throws(callTranslateKey, 'Parameter was an array');\n\n        // Null\n        testProperty.set('parameter', null);\n\n        assert.throws(callTranslateKey, 'Parameter was null');\n\n        // Number\n        testProperty.set('parameter', 123);\n\n        assert.throws(callTranslateKey, 'Parameter was a number');\n\n        // Function\n        testProperty.set('parameter', function () {});\n\n        assert.throws(callTranslateKey, 'Parameter was a function');\n\n        // String\n        testProperty.set('parameter', 'testString');\n\n        assert.throws(callTranslateKey, 'Parameter was a string');\n\n        // Boolean\n        testProperty.set('parameter', false);\n\n        assert.throws(callTranslateKey, 'Parameter was false');\n\n        // Object\n        testProperty.set('parameter', {});\n\n        assert.strictEqual(callTranslateKey(), undefined, 'Parameter was an object');\n\n        // Ember.Object instance\n        testProperty.set('parameter', Ember['default'].Object.create({}));\n\n        assert.strictEqual(callTranslateKey(), undefined, 'Parameter was an Ember.Object instance');\n    });\n\n    ember_qunit.test('translateKey() returns translated string for specified key', function (assert) {\n        TS.setDictionary(Ember['default'].Object.create({\n            'the_key': 'my value'\n        }));\n\n        assert.strictEqual(TS.getKeyValue('the_key'), 'my value');\n    });\n\n    ember_qunit.test('If either \"pluralKey\" or \"pluralCount\" are provided to translateKey() then both must be', function (assert) {\n        assert.strictEqual(TS.translateKey({\n            key: 'singular_key',\n            pluralKey: 'plural_key'\n        }), 'singular_key');\n\n        assert.strictEqual(TS.translateKey({\n            key: 'singular_key',\n            pluralCount: 3\n        }), 'singular_key');\n    });\n\n    ember_qunit.test('Pluralization occurs when provided the necessary information', function (assert) {\n        TS.setDictionary(Ember['default'].Object.create({\n            'the_singular_key': 'Singular translated value',\n            'the_plural_key': 'Plural translated value'\n        }));\n\n        assert.strictEqual(TS.translateKey({\n            key: 'the_singular_key',\n            pluralKey: 'the_plural_key',\n            pluralCount: 0\n        }), 'Singular translated value');\n\n        assert.strictEqual(TS.translateKey({\n            key: 'the_singular_key',\n            pluralKey: 'the_plural_key',\n            pluralCount: 3\n        }), 'Plural translated value');\n    });\n\n    ember_qunit.test('Token replacement in translation string', function (assert) {\n        TS.setDictionary(Ember['default'].Object.create({\n            'the_key': 'Replaced values: {0} and {1}'\n        }));\n\n        assert.strictEqual(TS.translateKey({\n            key: 'the_key',\n            parameters: {\n                $0: 'ASDF',\n                $1: 1234\n            }\n        }), 'Replaced values: ASDF and 1234');\n    });\n\n});","define('dummy/tests/unit/services/sl-translate-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/services');\n  QUnit.test('unit/services/sl-translate-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'unit/services/sl-translate-test.js should pass jshint.'); \n  });\n\n});","/* jshint ignore:start */\n\n/* jshint ignore:end */\n","/* jshint ignore:start */\n\ndefine('dummy/config/environment', ['ember'], function(Ember) {\n  var prefix = 'dummy';\n/* jshint ignore:start */\n\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = Ember['default'].$('meta[name=\"' + metaName + '\"]').attr('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  return { 'default': config };\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n/* jshint ignore:end */\n\n});\n\nif (runningTests) {\n  require(\"dummy/tests/test-helper\");\n} else {\n  require(\"dummy/app\")[\"default\"].create({\"name\":\"sl-ember-translate\",\"version\":\"1.10.0+462a7ac9\"});\n}\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpxpzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrttnNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;","file":"dummy.js"}